{"ast":null,"code":"var _jsxFileName = \"/Users/satendrayadav/Desktop/work_files/Test/myapp/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, CardContent, Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Pagination from \"@mui/material/Pagination\";\nimport PaginationItem from \"@mui/material/PaginationItem\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\n\n// const API_URL = \"https://api.example.com/items\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemList = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const fetchData = async () => {\n    try {\n      // Choose either API endpoint or local JSON file based on a condition\n      const apiUrl = process.env.REACT_APP_USE_API === \"true\" ? \"https://api.example.com/items\" : \"/data/items.json\"; // Assuming the JSON file is in the public folder\n\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setItems(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log(items);\n  const handleRefresh = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      await fetchData();\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-2\",\n        children: \"Item List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-container\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: currentItems.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          mt: 3,\n          color: \"red\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            count: Math.ceil(items.length / itemsPerPage),\n            page: currentPage,\n            color: \"secondary\",\n            onChange: handlePageChange,\n            renderItem: item => /*#__PURE__*/_jsxDEV(PaginationItem, {\n              component: \"button\",\n              onClick: () => handlePageChange(null, item.page),\n              ...item,\n              slots: {\n                previous: ArrowBackIosNewIcon,\n                next: ArrowForwardIosIcon\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            onClick: handleRefresh,\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ItemList, \"9A7q0unG/gWmKRNqK7MWIBCC0og=\");\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","CardContent","Grid","Stack","Pagination","PaginationItem","ArrowBackIosNewIcon","ArrowForwardIosIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemList","_s","items","setItems","loading","setLoading","error","setError","currentPage","setCurrentPage","itemsPerPage","fetchData","apiUrl","process","env","REACT_APP_USE_API","response","fetch","ok","Error","status","data","json","message","console","log","handleRefresh","indexOfLastItem","indexOfFirstItem","currentItems","slice","handlePageChange","event","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","item","xs","sm","md","name","description","id","justifyContent","alignItems","mt","color","count","Math","ceil","length","page","onChange","renderItem","component","onClick","slots","previous","next","sx","variant","_c","$RefreshReg$"],"sources":["/Users/satendrayadav/Desktop/work_files/Test/myapp/src/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, CardContent, Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Pagination from \"@mui/material/Pagination\";\nimport PaginationItem from \"@mui/material/PaginationItem\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\n\n// const API_URL = \"https://api.example.com/items\";\n\nconst ItemList = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n\n  const fetchData = async () => {\n    try {\n      // Choose either API endpoint or local JSON file based on a condition\n      const apiUrl =\n        process.env.REACT_APP_USE_API === \"true\"\n          ? \"https://api.example.com/items\"\n          : \"/data/items.json\"; // Assuming the JSON file is in the public folder\n\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setItems(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  console.log(items);\n\n  const handleRefresh = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      await fetchData();\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n  };\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"text-center mb-2\">Item List</h1>\n        {loading && <p>Loading...</p>}\n        {error && <p>Error: {error}</p>}\n        {!loading && !error && (\n          <div className=\"item-container\">\n            {/* <ul>\n              {currentItems.map((item) => (\n                <li key={item.id}>\n                  <h3>{item.name}</h3>\n                  <p>{item.description}</p>\n                </li>\n              ))}\n            </ul> */}\n\n            <Grid container spacing={2}>\n              {currentItems.map((item) => (\n                <Grid key={item.id} item xs={12} sm={6} md={4}>\n                  <Card>\n                    <CardContent>\n                      <h3>{item.name}</h3>\n                      <p>{item.description}</p>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n\n            <Stack\n              spacing={2}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              mt={3}\n              color=\"red\"\n            >\n              <Pagination\n                count={Math.ceil(items.length / itemsPerPage)}\n                page={currentPage}\n                color=\"secondary\"\n                onChange={handlePageChange}\n                renderItem={(item) => (\n                  <PaginationItem\n                    component=\"button\"\n                    onClick={() => handlePageChange(null, item.page)}\n                    {...item}\n                    slots={{\n                      previous: ArrowBackIosNewIcon,\n                      next: ArrowForwardIosIcon,\n                    }}\n                  />\n                )}\n              />\n            </Stack>\n\n            <Grid container justifyContent=\"center\" sx={{ mt: 2 }}>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handleRefresh}\n              >\n                Refresh\n              </Button>\n            </Grid>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ItemList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}